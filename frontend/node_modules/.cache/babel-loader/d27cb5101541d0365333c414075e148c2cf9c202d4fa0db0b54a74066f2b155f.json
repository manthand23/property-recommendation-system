{"ast":null,"code":"var _jsxFileName = \"/Users/manthand/Downloads/property-recommendation-system/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SubjectForm from \"./components/SubjectForm.tsx\";\nimport Results from \"./components/Results.tsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [subject, setSubject] = useState({\n    gla: 0,\n    lot_size_sf: 0,\n    num_beds: 0,\n    num_baths: 0,\n    year_built: 0,\n    effective_date: \"\",\n    latitude: 0,\n    longitude: 0,\n    structure_type: \"\",\n    style: \"\",\n    condition: \"\",\n    basement: \"\",\n    address: \"\"\n  });\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleRecommend = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/recommend-from-dataset\", {\n        address: subject.address\n      });\n      setResults(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Recommendation failed\", err);\n      const detail = (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || \"Could not fetch recommendations. Try using an address from the dataset.\";\n      alert(detail);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      maxWidth: \"900px\",\n      margin: \"auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFE1 Property Comp Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a subject property (must match address from dataset) and we\\u2019ll find 3 comparable sales.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubjectForm, {\n      subject: subject,\n      setSubject: setSubject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecommend,\n      disabled: loading,\n      style: {\n        marginTop: \"1rem\",\n        padding: \"0.5rem 1rem\"\n      },\n      children: loading ? \"Evaluating...\" : \"Get Top 3 Comps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      subject: subject,\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tDDj9V7b7phVhoQHXT3cksre4gw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SubjectForm","Results","axios","jsxDEV","_jsxDEV","App","_s","subject","setSubject","gla","lot_size_sf","num_beds","num_baths","year_built","effective_date","latitude","longitude","structure_type","style","condition","basement","address","results","setResults","loading","setLoading","handleRecommend","response","post","data","err","_err$response","_err$response$data","console","error","detail","alert","padding","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginTop","_c","$RefreshReg$"],"sources":["/Users/manthand/Downloads/property-recommendation-system/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SubjectProperty, CompResult } from \"./types\";\nimport SubjectForm from \"./components/SubjectForm.tsx\";\nimport Results from \"./components/Results.tsx\";\nimport axios from \"axios\";\n\nconst App: React.FC = () => {\n  const [subject, setSubject] = useState<SubjectProperty>({\n    gla: 0,\n    lot_size_sf: 0,\n    num_beds: 0,\n    num_baths: 0,\n    year_built: 0,\n    effective_date: \"\",\n    latitude: 0,\n    longitude: 0,\n    structure_type: \"\",\n    style: \"\",\n    condition: \"\",\n    basement: \"\",\n    address: \"\",\n  });\n\n  const [results, setResults] = useState<CompResult[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleRecommend = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/recommend-from-dataset\", {\n        address: subject.address,\n      });\n      setResults(response.data);\n    } catch (err: any) {\n      console.error(\"Recommendation failed\", err);\n      const detail = err?.response?.data?.detail || \"Could not fetch recommendations. Try using an address from the dataset.\";\n      alert(detail);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", maxWidth: \"900px\", margin: \"auto\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1>üè° Property Comp Recommender</h1>\n      <p>Enter a subject property (must match address from dataset) and we‚Äôll find 3 comparable sales.</p>\n      <SubjectForm subject={subject} setSubject={setSubject} />\n      <button onClick={handleRecommend} disabled={loading} style={{ marginTop: \"1rem\", padding: \"0.5rem 1rem\" }}>\n        {loading ? \"Evaluating...\" : \"Get Top 3 Comps\"}\n      </button>\n      <Results subject={subject} results={results} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}